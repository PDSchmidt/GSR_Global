package view;
import com.formdev.flatlaf.FlatDarkLaf;
import com.formdev.flatlaf.FlatLaf;
import com.formdev.flatlaf.FlatLightLaf;
import control.DatabaseManager;
import javax.swing.*;
import java.awt.*;

/**
 * The main frame of the application that holds the different dashboards
 * @author Paul Schmidt
 */
public class MainFrame extends javax.swing.JFrame {
    /**
     * The current visual theme
     */
    private String currentTheme;
    /**
     * A reference to itself
     */
    private MainFrame myRef;
    /**
     * The DatabaseManager that holds the connection to the database
     */
    private DatabaseManager dbm;

    /**
     * Constructs a new MainFrame using the given DatabaseManager and theme
     * @param theme the current theme, either light or dark
     * @param dbm the DatabaseManager that holds a connection to the database
     */
    public MainFrame( final String theme, final DatabaseManager dbm) {
        currentTheme = theme;
        this.dbm = dbm;
        myRef = this;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MenuBar = new javax.swing.JMenuBar();
        OptionsMenu = new javax.swing.JMenu();
        LightDarkModeToggle = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        BackToMenuItem = new javax.swing.JMenuItem();
        ExitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1280, 720));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        OptionsMenu.setText("Options");

        LightDarkModeToggle.setText("Toggle Theme");
        LightDarkModeToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LightDarkModeToggleActionPerformed(evt);
            }
        });
        OptionsMenu.add(LightDarkModeToggle);
        OptionsMenu.add(jSeparator1);

        BackToMenuItem.setText("Back to Login");
        BackToMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackToMenuItemActionPerformed(evt);
            }
        });
        OptionsMenu.add(BackToMenuItem);

        ExitMenuItem.setText("Exit Application");
        ExitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitMenuItemActionPerformed(evt);
            }
        });
        OptionsMenu.add(ExitMenuItem);

        MenuBar.add(OptionsMenu);

        setJMenuBar(MenuBar);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Toggles the visual theme to Light if it was Dark and vice-versa
     * @param evt the buttonclick event
     */
    private void LightDarkModeToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LightDarkModeToggleActionPerformed
        if (currentTheme.equals("light")) {
            EventQueue.invokeLater(new Runnable() {
                @Override
                public void run() {
                    FlatDarkLaf.setup();
                    UIManager.put("Table.showVerticalLines", true);
                    UIManager.put("Table.showHorizontalLines", true);
                    UIManager.put("Table.cellMargins", new Insets(0,10,0,10));
                    FlatLaf.updateUI();
                }
            });
            currentTheme = "dark";
        } else {
            EventQueue.invokeLater(new Runnable() {
                @Override
                public void run() {
                    FlatLightLaf.setup();
                    UIManager.put("Table.showVerticalLines", true);
                    UIManager.put("Table.showHorizontalLines", true);
                    UIManager.put("Table.cellMargins", new Insets(0,10,0,10));
                    FlatLaf.updateUI();
                }
            });
            currentTheme = "light";
        }
    }//GEN-LAST:event_LightDarkModeToggleActionPerformed

    /**
     * Exits the application
     * @param evt the buttonclick event
     */
    private void ExitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitMenuItemActionPerformed
        myRef.dispose();
        System.exit(0);
    }//GEN-LAST:event_ExitMenuItemActionPerformed

    /**
     * Disposes this and navigates to the LoginFrame
     * @param evt the buttonclick event
     */
    private void BackToMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackToMenuItemActionPerformed
        LoginFrame login = new LoginFrame(currentTheme);
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackToMenuItemActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem BackToMenuItem;
    private javax.swing.JMenuItem ExitMenuItem;
    private javax.swing.JMenuItem LightDarkModeToggle;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JMenu OptionsMenu;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
