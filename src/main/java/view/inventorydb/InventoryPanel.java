package view.inventorydb;

import control.DatabaseManager;
import java.sql.SQLException;
import javax.swing.JTable;

/**
 * A JPanel that is used for displaying the inventory of all stores
 * @author Paul Schmidt
 */
public class InventoryPanel extends javax.swing.JPanel {
    /**
     * The dbm that holds a connection to the database
     */
    private DatabaseManager dbm;
    /**
     * Creates new form InventoryPanel without a database connection
     */
    public InventoryPanel() {
        initComponents();
    }

    /**
     * Creates a new InventoryPanel with a database connection
     * @param dbm the DatabaseManager that holds the connection to the database
     */
    public InventoryPanel(final DatabaseManager dbm) {
        this.dbm = dbm;
        initComponents();
        generateInventory();
    }

    /**
     * Queries the database for all inventory information for all stores
     * and generates the JTable with the information
     */
    private void generateInventory() {
        JTable testTable = null;
        try {
            testTable = dbm.executeQueryGetTable("select LocationName, PartNumber, PartName, PartDescreption, Quantity\n" +
                    "from inventory natural join parts natural join storelocations;");
            testTable.setAutoCreateRowSorter(true);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        if (testTable != null) {
            addTable(testTable);
        }
    }

    /**
     * Removes the old table from the ScrollPane and adds a new one
     * @param table the new table to add to the ScrollPane
     */
    private void addTable(final JTable table) {
        InventoryScrollPane.getViewport().remove(InventoryTable);
        InventoryTable = table;
        InventoryScrollPane.getViewport().add(InventoryTable);
        revalidate();
        repaint();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        InventoryPanel = new javax.swing.JPanel();
        InventoryScrollPane = new javax.swing.JScrollPane();
        InventoryTable = new javax.swing.JTable();

        InventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "PartNumber", "PartName", "PartDescription", "Cost", "Stock", "Required"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        InventoryTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        InventoryTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        InventoryScrollPane.setViewportView(InventoryTable);

        javax.swing.GroupLayout InventoryPanelLayout = new javax.swing.GroupLayout(InventoryPanel);
        InventoryPanel.setLayout(InventoryPanelLayout);
        InventoryPanelLayout.setHorizontalGroup(
            InventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InventoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(InventoryScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );
        InventoryPanelLayout.setVerticalGroup(
            InventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InventoryPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(InventoryScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(InventoryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 689, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(InventoryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel InventoryPanel;
    private javax.swing.JScrollPane InventoryScrollPane;
    private javax.swing.JTable InventoryTable;
    // End of variables declaration//GEN-END:variables
}
