package view.orderdb;

import control.DatabaseManager;
import java.sql.SQLException;
import javax.swing.JTable;

/**
 * Custom JPanel that displays information about customers and allows for the
 * creation of new customers.
 * @author Paul Schmidt
 */
public class CustomerPanel extends javax.swing.JPanel {
    /**
     * DatabaseManager that holds the connection to the database
     */
    private DatabaseManager dbm;

    /**
     * Creates new form CustomerManagementPanel
     */
    public CustomerPanel() {
        initComponents();
    }

    /**
     * Creates a new Customer Panel with the given database connection
     * @param dbm the DatabaseManager that holds a connection to the database
     */
    public CustomerPanel(final DatabaseManager dbm) {
        this.dbm = dbm;
        initComponents();
        generateCustomers();
    }

    /**
     * Generates a JTable of Customer information using a SQL query to the database
     */
    protected void generateCustomers() {
        JTable testTable = null;
        try {
            testTable = dbm.executeQueryGetTable("select * from customers;");
            testTable.setAutoCreateRowSorter(true);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        if (testTable != null) {
            addTable(testTable);
        }
    }

    /**
     *Removes the old customer table and adds the new one to the Scroll Pane
     * @param table the new table
     */
    private void addTable(final JTable table) {
        CustomerManagementScrollPane.getViewport().remove(CustomersTable);
        CustomersTable = table;
        CustomerManagementScrollPane.getViewport().add(CustomersTable);
        revalidate();
        repaint();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CustomerManagementPanel = new javax.swing.JPanel();
        NewCustomerButton = new javax.swing.JButton();
        CustomerManagementScrollPane = new javax.swing.JScrollPane();
        CustomersTable = new javax.swing.JTable();

        NewCustomerButton.setText("New Customer");
        NewCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewCustomerButtonActionPerformed(evt);
            }
        });

        CustomersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "CustomerID", "FirstName", "LastName", "Email", "Address", "Phone", "CustomerType", "LocationID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        CustomersTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        CustomersTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        CustomerManagementScrollPane.setViewportView(CustomersTable);

        javax.swing.GroupLayout CustomerManagementPanelLayout = new javax.swing.GroupLayout(CustomerManagementPanel);
        CustomerManagementPanel.setLayout(CustomerManagementPanelLayout);
        CustomerManagementPanelLayout.setHorizontalGroup(
            CustomerManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CustomerManagementPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CustomerManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CustomerManagementScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NewCustomerButton))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        CustomerManagementPanelLayout.setVerticalGroup(
            CustomerManagementPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CustomerManagementPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(NewCustomerButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CustomerManagementScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(CustomerManagementPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 689, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(CustomerManagementPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Creates a New Customer Frame for the user to input information into.
     * @param evt the buttonclick event
     */
    private void NewCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewCustomerButtonActionPerformed
        new NewCustomerFrame(this, dbm);
    }//GEN-LAST:event_NewCustomerButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CustomerManagementPanel;
    private javax.swing.JScrollPane CustomerManagementScrollPane;
    private javax.swing.JTable CustomersTable;
    private javax.swing.JButton NewCustomerButton;
    // End of variables declaration//GEN-END:variables
}
