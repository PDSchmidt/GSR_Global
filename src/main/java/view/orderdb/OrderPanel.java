/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.orderdb;

import Testing.Testing;
import control.DatabaseManager;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import java.sql.SQLException;


/**
 *
 * @author Paul
 */
public class OrderPanel extends javax.swing.JPanel {
    private String type;
    private DatabaseManager dbm;

    public OrderPanel() {
        initComponents();
    }
    /**
     * Creates new form ActiveOrderPanel
     */
    public OrderPanel(final String type, final DatabaseManager dbm) {
        this.type = type;
        this.dbm = dbm;
        initComponents();
        if(type.equals("ACTIVE")) {
            generateActiveOrders();
        } else if (type.equals("CLOSED")) {
            generateClosedOrders();
        }
    }
    private void generateActiveOrders() {
        JTable testTable = null;
        try {
            testTable = dbm.executeQueryGetTable("select OrderID, LastName, FirstName, LocationName, OrderDate, TotalCost, OrderStatus\n" +
                    "from orders join customers on (orders.CustomerID = customers.CustomerID)\n" +
                    "join storelocations on (orders.LocationID = storelocations.LocationID)\n" +
                    "where orders.OrderStatus != \"COMPLETE\"\n" +
                    "order by OrderDate;");
            testTable.setAutoCreateRowSorter(true);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        if (testTable != null) {
            addTable(testTable);
            System.out.println("ACTIVE ORDERS TABLE ADDED");
        } else {
            System.out.println("ISSUE CREATING ACTIVE ORDERS TABLE");
        }
    }
    private void generateClosedOrders() {
        JTable testTable = null;
        try {
            testTable = dbm.executeQueryGetTable("select OrderID, LastName, FirstName, LocationName, OrderDate, TotalCost, OrderStatus\n" +
                    "from orders join customers on (orders.CustomerID = customers.CustomerID)\n" +
                    "join storelocations on (orders.LocationID = storelocations.LocationID)\n" +
                    "where orders.OrderStatus = \"COMPLETE\"\n" +
                    "order by OrderDate;");
            testTable.setAutoCreateRowSorter(true);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        if (testTable != null) {
            addTable(testTable);
            System.out.println("CLOSED ORDERS TABLE ADDED");
        } else {
            System.out.println("ISSUE CREATING CLOSED ORDERS TABLE");
        }
    }
    private void addTable(final JTable table) {
        OrdersScrollPane.getViewport().remove(OrdersTable);
        OrdersTable = table;
        OrdersScrollPane.getViewport().add(OrdersTable);
        revalidate();
        repaint();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        OrderPanel = new javax.swing.JPanel();
        OrdersScrollPane = new javax.swing.JScrollPane();
        OrdersTable = new javax.swing.JTable();
        RefreshButton = new javax.swing.JButton();

        OrdersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "OrderID", "CustomerID", "OrderDate", "OrderStatus", "TotalCost"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        OrdersTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        OrdersTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        OrdersScrollPane.setViewportView(OrdersTable);

        RefreshButton.setText("Refresh");
        RefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout OrderPanelLayout = new javax.swing.GroupLayout(OrderPanel);
        OrderPanel.setLayout(OrderPanelLayout);
        OrderPanelLayout.setHorizontalGroup(
            OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(OrdersScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RefreshButton))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        OrderPanelLayout.setVerticalGroup(
            OrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OrderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(RefreshButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OrdersScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(OrderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 689, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(OrderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void RefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshButtonActionPerformed
        if(type.equals("ACTIVE")) {
            generateActiveOrders();
        } else {
            generateClosedOrders();
        }
    }//GEN-LAST:event_RefreshButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel OrderPanel;
    private javax.swing.JScrollPane OrdersScrollPane;
    private javax.swing.JTable OrdersTable;
    private javax.swing.JButton RefreshButton;
    // End of variables declaration//GEN-END:variables
}
